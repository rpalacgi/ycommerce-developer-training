def config = {
		localProperties {
				property 'build.parallel', 'true'
				property 'hac.webroot', '/hac'
				property 'bookstorestorefront.webroot', ''
				property 'storefrontContextRoot', ''
		}

		extensions {
			extName 'admincockpit'
			extName 'backoffice'
			extName 'cockpit'
			extName 'hmc'
			extName 'mcc'
			extName 'platformhmc'
			extName 'platformbackoffice'
				
			extName 'bmecat'
			extName 'bmecathmc'				
			extName 'btg'
			extName 'btgcockpit'
			extName 'commercesearch'
			extName 'commercesearchhmc'
			extName 'commerceservices'
			extName 'basecommerce'
			extName 'payment'
			extName 'promotions'
			extName 'voucher'
			extName 'customerreview'
			extName 'ticketsystem'
			extName 'solrserver'
			extName 'solrfacetsearch'
			extName 'solrfacetsearchhmc'
			extName 'oci'
			extName 'wishlist'
			extName 'commercefacades'
			extName 'commerceservicesbackoffice'
	
			extName 'addonsupport'
			extName 'liveeditaddon'
			extName 'acceleratorwebservicesaddon'
											
			extName 'productcockpit'
			extName 'cms2'
			extName 'cms2lib'
			extName 'cmscockpit'
			extName 'bmecat'
			extName 'bmecathmc'
			extName 'importcockpit'
			extName 'classificationsystems'
			extName 'classificationsystemshmc'
											
			extName 'cscockpit'
	
			extName 'acceleratorservices'
			extName 'acceleratorfacades'
			extName 'acceleratorcms'
			extName 'acceleratorstorefrontcommons'
			
			extName 'yacceleratorstorefront'
			extName 'ycommercewebservices'
			
			extName 'springintegrationlibs'
		}
}

task setup << {
		apply plugin: 'installer-platform-plugin'
		apply plugin: 'installer-addon-plugin'
		def pl = platform(config)
		pl.setup()
		
		pl.project.addons {
				names "liveeditaddon"
				template "yacceleratorstorefront"
				storeFronts "yacceleratorstorefront"
				platform pl
		}

		pl.project.addons {
				names "acceleratorwebservicesaddon"
				template "ycommercewebservices"
				storeFronts "ycommercewebservices"
				platform pl
		}
}

task initialize << {
		apply plugin: 'installer-platform-plugin'
		def pl = platform(config)
		pl.build()
		pl.initialize()
}


task start << {
		apply plugin: 'installer-platform-plugin'
		def pl = platform(config)
		pl.start()
}
